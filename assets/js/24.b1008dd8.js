(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{444:function(t,o,r){"use strict";r.r(o);var e=r(65),n=Object(e.a)({},(function(){var t=this,o=t.$createElement,r=t._self._c||o;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"springboot注解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot注解"}},[t._v("#")]),t._v(" SpringBoot注解")]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"_1-springbootapplication"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-springbootapplication"}},[t._v("#")]),t._v(" 1.@SpringBootApplication")]),t._v(" "),r("blockquote",[r("p",[t._v("包含@Configuration、@EnableAutoConfiguration、@ComponentScan")])]),t._v(" "),r("p",[t._v("通常用在主类上；")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("注解")]),t._v(" "),r("th",[t._v("作用")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("@ComponentScan")]),t._v(" "),r("td",[t._v("用来自动扫描被这些注解标识的类，最终生成ioc容器里的bean，默认扫描范围是@ComponentScan注解所在配置类包及子包的类")])]),t._v(" "),r("tr",[r("td",[t._v("@SpringBootConfiguration")]),t._v(" "),r("td",[t._v("是springboot实现自动化配置的核心注解，通过这个注解把spring应用所需的bean注入容器中")])]),t._v(" "),r("tr",[r("td",[t._v("@EnableAutoConfiguration")]),t._v(" "),r("td",[t._v("是springboot实现自动化配置的核心注解，通过这个注解把spring应用所需的bean注入容器中")])])])]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"_2-component、-service、-controller、-repository"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-component、-service、-controller、-repository"}},[t._v("#")]),t._v(" 2.@"),r("a",{attrs:{href:"https://so.csdn.net/so/search?q=Component&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[t._v("Component"),r("OutboundLink")],1),t._v("、@Service、@Controller、@Repository")]),t._v(" "),r("p",[t._v("这几个注解放在一起是因为功能基本一样的，都是将类注入到spring容器中，只不过它们使用的场景不同，被@Component,@Service,@Controller,@Repository注解标注的类，这些类会被纳入进spring容器中管理。")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("注解")]),t._v(" "),r("th",[t._v("说明")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("@Repository")]),t._v(" "),r("td",[t._v("持久层（dao）注入spring容器")])]),t._v(" "),r("tr",[r("td",[t._v("@Service")]),t._v(" "),r("td",[t._v("业务逻辑层（server）注入spring容器")])]),t._v(" "),r("tr",[r("td",[t._v("@Controller")]),t._v(" "),r("td",[t._v("控制层（controller）注入spring容器")])]),t._v(" "),r("tr",[r("td",[t._v("@Component")]),t._v(" "),r("td",[t._v("普通pojo注入spring容器")])])])]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"_3-responsebody"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-responsebody"}},[t._v("#")]),t._v(" 3.@ResponseBody")]),t._v(" "),r("blockquote",[r("p",[t._v("@ResponseBody可以作用在方法上或类上，表示该方法的返回结果直接写入 HTTP response body 中，而不会被解析为跳转路径，即不会经过视图解析器，返回什么数据即在页面输入什么数据。")])]),t._v(" "),r("p",[t._v("@ResponseBody的作用其实是将java对象转为json格式的数据。")]),t._v(" "),r("p",[t._v("测试如下:")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://lsky-1305772907.cos.ap-nanjing.myqcloud.com/2022/06/22/00b1daa8279aa.png",alt:"image-20220623011518304"}})]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"_4-restcontroller"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-restcontroller"}},[t._v("#")]),t._v(" 4.@RestController")]),t._v(" "),r("p",[t._v("该注解是@Controller和@ResponseBody的结合体，一般用于类，作用等于在类上面添加了@ResponseBody和@Controller，故一般用于Controller层")]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"_5-autowired、-qualifier、-resource"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-autowired、-qualifier、-resource"}},[t._v("#")]),t._v(" 5.@AutoWired、@Qualifier、@Resource")]),t._v(" "),r("p",[t._v("这3个注解都是基于注解方式进行自动装配，在容器里面将查找到的bean返回，一般@AutoWired用得最多，@Qualifier则需要配合@AutoWired使用，@Resource则是可以通过名字进行自动装配")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://lsky-1305772907.cos.ap-nanjing.myqcloud.com/2022/06/22/c199c0e3a01b2.png",alt:"image-20220623011911058"}})]),t._v(" "),r("p",[t._v("@Qualifier举例:")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://lsky-1305772907.cos.ap-nanjing.myqcloud.com/2022/06/22/39d38cfd2d29b.png",alt:"image-20220623012119610"}})]),t._v(" "),r("p",[t._v("@Resourse举例:")]),t._v(" "),r("blockquote",[r("p",[t._v("该注解的使用相当于@AutoWired和@Qualifier配合使用的效果,二合一的方法")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://lsky-1305772907.cos.ap-nanjing.myqcloud.com/2022/06/22/c5d51ee256e52.png",alt:"image-20220623012217760"}})]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"_6-requestmapping、-getmapping、-postmapping"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-requestmapping、-getmapping、-postmapping"}},[t._v("#")]),t._v(" 6.@RequestMapping、@GetMapping、@PostMapping")]),t._v(" "),r("p",[t._v("这3个注解功能也是类似的，通过这3个注解来映射请求，也就是通过它来指定控制器可以处理哪些URL请求，用在方法上，可以通过配置的url进行访问")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://lsky-1305772907.cos.ap-nanjing.myqcloud.com/2022/06/22/8c99476417856.png",alt:"image-20220623012514237"}})]),t._v(" "),r("p",[r("strong",[t._v("@RequestMapping")]),t._v(":\n发起get请求或者post请求都可以")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://lsky-1305772907.cos.ap-nanjing.myqcloud.com/2022/06/22/534cabdc36f0b.png",alt:"image-20220623012554898"}})]),t._v(" "),r("p",[r("strong",[t._v("@GetMapping")]),t._v(":\n只能用get请求")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://lsky-1305772907.cos.ap-nanjing.myqcloud.com/2022/06/22/fe56cbdef1d36.png",alt:"image-20220623012637078"}})]),t._v(" "),r("p",[r("strong",[t._v("@PostMapping")]),t._v(":\n只能发起post请求")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://lsky-1305772907.cos.ap-nanjing.myqcloud.com/2022/06/22/05a6e40067c88.png",alt:"image-20220623012711215"}})])])}),[],!1,null,null,null);o.default=n.exports}}]);